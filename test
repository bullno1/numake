#!/bin/bash -e

EXIT_CODE=0
DO_COVERAGE=1

main() {
	test_with_version 2 $* || EXIT_CODE=1
	echo
	test_with_version 3 $* || EXIT_CODE=1

	echo
	if command -v pypy > /dev/null; then
		PYPY_PATH=`which pypy`
		echo "Found PyPy at: ${PYPY_PATH}"
		test_with_python pypy ${PYPY_PATH} $* || EXIT_CODE=1
	else
		echo "Could not find PyPy"
	fi

	exit $EXIT_CODE
}

test_with_version() {
	VERSION=$1
	shift

	if [[ `python -V 2>&1` == "Python $VERSION"* ]]; then
		PYTHON_PATH=`which python`
	elif [[ `python${VERSION} -V 2>&1` == "Python $VERSION"* ]]; then
		PYTHON_PATH=`which python${VERSION}`
	else
		PYTHON_PATH=
	fi

	if [ ! -z "$PYTHON_PATH" ]; then
		echo "Found Python ${VERSION} at: $PYTHON_PATH"
		test_with_python ${VERSION} ${PYTHON_PATH} $*
	else
		echo "Could not find Python ${VERSION}"
	fi
}

test_with_python() {
	VERSION=$1
	PYTHON_PATH=$2
	shift 2

	VENV_DIR=".tests/venvs/${VERSION}"
	rm -rf ${VENV_DIR}
	mkdir -p ${VENV_DIR}
	virtualenv -p "$PYTHON_PATH" --no-site-packages "${VENV_DIR}"
	source "${VENV_DIR}/bin/activate"

	if [ $DO_COVERAGE -eq 1 ]; then
		pip install coverage
	fi

	./test-with-current-python $*

	if [ $DO_COVERAGE -eq 1 ]; then
		find .tests/pythons -name .coverage | xargs coverage combine
		coverage html
		# Doing it once with the first python version is enough
		DO_COVERAGE=0
	fi

	deactivate
}

main $*
